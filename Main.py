from aiogram import Bot, Dispatcher, types, executor
import logging
from config import Token
from Keyboards import kb_sections, create_football_keyboard, create_school_keyboard, create_swim_keyboard, \
    create_programming_keyboard, kb_help_sections
from aiogram.utils import exceptions

logging.basicConfig(level=logging.INFO)
bot = Bot(token=Token)
dp = Dispatcher(bot=bot)


async def set_start_command(bot: Bot, chat_id):
    await bot.set_my_commands([
        types.BotCommand(command="start", description="–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ë–æ—Ç–∞ + –í–æ–∑–º–æ–∂–Ω—ã–µ –û–±–Ω–æ–≤–ª–µ–Ω–∏—è"),
        types.BotCommand(command="help", description="–ü–æ–º–æ—â—å —Å –ë–æ—Ç–æ–º"),
    ], scope=types.BotCommandScopeChat(chat_id), language_code="ru")
    # Scope-–û–±–ª–∞—Å—Ç—å, –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ(—á–∞—Ç, –≥–¥–µ –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—ã)


@dp.message_handler(commands="start")
async def start(message: types.Message):
    await set_start_command(bot, message.from_user.id)
    photo = types.InputFile("photo_menu vchera.jpg")  # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ö–∞—Ä—Ç–∏–Ω–∫—É
    await message.answer_photo(photo=photo, caption=F"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}!\n"
                                                    F"–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ ‚¨á",
                               reply_markup=kb_sections)


@dp.callback_query_handler(text="football")
async def football(call: types.CallbackQuery):
    await call.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏
    photo = types.InputMediaPhoto(
        open("photo_football_allteam.jpg", "rb"))  # rb-–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –≤–∏–¥–µ –¥–≤–æ–∏—á–Ω–æ–≥–æ –ö–æ–¥–∞
    await call.message.edit_media(media=photo)
    await call.message.edit_caption(caption="–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª ‚öΩ–§—É—Ç–±–æ–ª–∞‚öΩ, –≤—ã–±–µ—Ä–∏—Ç–µ –ì–æ–¥ ‚¨á",
                                    reply_markup=create_football_keyboard())


@dp.callback_query_handler(text="back")
async def back(call: types.CallbackQuery):
    photo = types.InputMediaPhoto(open("photo_menu vchera.jpg", "rb"))
    await call.message.edit_media(media=photo)
    await call.message.edit_caption(caption=F"–ü—Ä–∏–≤–µ—Ç, {call.from_user.full_name}!\n"
                                            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ ‚¨á", reply_markup=kb_sections)


@dp.callback_query_handler(text="studying")
async def studying(call: types.CallbackQuery):
    await call.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏
    photo = types.InputMediaPhoto(open("photo_2023-08-25_12-18-49 studying.jpg", "rb"))
    await call.message.edit_media(media=photo)
    await call.message.edit_caption(caption="–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª üéì–û–±—É—á–µ–Ω–∏—èüéì, –≤—ã–±–µ—Ä–∏—Ç–µ –ö–ª–∞—Å—Å ‚¨á",
                                    reply_markup=create_school_keyboard())


@dp.callback_query_handler(text="swimming")
async def swimming(call: types.CallbackQuery):
    await call.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏
    photo = types.InputMediaPhoto(open("photo_pul_1.jpg", "rb"))
    await call.message.edit_media(media=photo)
    await call.message.edit_caption(caption="–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª üèä‚Äç–ü–ª–∞–≤–∞–Ω—å–µüèä, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å —Å—Ç–∞—Ç—å—é ‚¨á",
                                    reply_markup=create_swim_keyboard())


@dp.callback_query_handler(text="programming")
async def programming(call: types.CallbackQuery):
    await call.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏
    photo = types.InputMediaPhoto(open("photo_it_sevodnya.jpg", "rb"))
    await call.message.edit_media(media=photo)
    await call.message.edit_caption(caption="–í—ã –ø–æ–ø–∞–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª üíª–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µüíª, –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –í–∞—Å –ö—É—Ä—Å ‚¨á",
                                    reply_markup=create_programming_keyboard())


@dp.message_handler(commands="help")
async def help(message: types.Message):
    photo = types.InputFile("help.jpg")
    await message.answer_photo(photo=photo, caption=F"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}, —á–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?\n"
                                                    F"–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª –Ω–∏–∂–µ ‚¨á",
                               reply_markup=kb_help_sections())


@dp.callback_query_handler(text="help_delete")
async def delete(call: types.CallbackQuery):
    await call.answer()  # –û—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback, —É–±–∏—Ä–∞–µ–º —á–∞—Å–∏–∫–∏
    await call.message.delete()
    try:
        # –ë–ª–æ–∫ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –±—ã—Ç—å —Å –æ—à–∏–±–∫–æ–π
        await bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id - 1)
    except exceptions.MessageToDeleteNotFound:
        pass


executor.start_polling(dp)
